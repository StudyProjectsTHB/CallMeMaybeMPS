package CallScriptLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.core.aspects.constraints.rules.BaseRulesConstraintsDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.constraints.rules.Rule;
import jetbrains.mps.core.aspects.constraints.rules.kinds.ContainmentContext;
import java.util.List;
import java.util.Collections;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.core.aspects.constraints.rules.BaseRule;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.core.aspects.constraints.rules.RuleId;
import jetbrains.mps.core.aspects.constraints.rules.kinds.PredefinedRuleKinds;
import CallScriptLanguage.behavior.ContinuingChatNode__BehaviorDescriptor;

public final class ContinuingChatNode_ConstraintRules extends BaseRulesConstraintsDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e59cL, "CallScriptLanguage.structure.ContinuingChatNode");

  public static final Rule<ContainmentContext> check_id2505654946972595609 = new Rule_hasLastDefaultConnection();
  public static final Rule<ContainmentContext> check_id2505654946974364973 = new Rule_hasOnlyLastAsDefaultConnection();

  private static final List<Rule<?>> RULES = Collections.unmodifiableList(Arrays.<Rule<?>>asList(check_id2505654946972595609, check_id2505654946974364973));

  @NotNull
  @Override
  public List<Rule<?>> getDeclaredRules() {
    return RULES;
  }

  public static final class Rule_hasLastDefaultConnection extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:78a9156e-a44f-41d3-80a0-48b94124f378(CallScriptLanguage.constraints)/2505654946972595609");
    public static final RuleId ID_hasLastDefaultConnection = new RuleId(2505654946972595609L, SOURCE_NODE_REF);

    public Rule_hasLastDefaultConnection() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_hasLastDefaultConnection, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return (boolean) ContinuingChatNode__BehaviorDescriptor.hasLastDefaultConnection_id2b5RYojY$Lm.invoke(context.getChildNode());
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }

  }

  public static final class Rule_hasOnlyLastAsDefaultConnection extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:78a9156e-a44f-41d3-80a0-48b94124f378(CallScriptLanguage.constraints)/2505654946974364973");
    public static final RuleId ID_hasOnlyLastAsDefaultConnection = new RuleId(2505654946974364973L, SOURCE_NODE_REF);

    public Rule_hasOnlyLastAsDefaultConnection() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_hasOnlyLastAsDefaultConnection, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return (boolean) ContinuingChatNode__BehaviorDescriptor.hasOnlyLastAsDefaultConnection_id2b5RYok3Ap5.invoke(context.getChildNode());
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }

  }

  /*package*/ ContinuingChatNode_ConstraintRules() {
    super(CONCEPT);
  }
}
