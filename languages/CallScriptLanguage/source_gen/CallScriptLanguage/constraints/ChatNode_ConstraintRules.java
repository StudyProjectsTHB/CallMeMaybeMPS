package CallScriptLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.core.aspects.constraints.rules.BaseRulesConstraintsDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.constraints.rules.Rule;
import jetbrains.mps.core.aspects.constraints.rules.kinds.ContainmentContext;
import java.util.List;
import java.util.Collections;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.core.aspects.constraints.rules.BaseRule;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.core.aspects.constraints.rules.RuleId;
import jetbrains.mps.core.aspects.constraints.rules.kinds.PredefinedRuleKinds;
import CallScriptLanguage.behavior.ChatBot__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SConcept;

public final class ChatNode_ConstraintRules extends BaseRulesConstraintsDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e594L, "CallScriptLanguage.structure.ChatNode");

  public static final Rule<ContainmentContext> check_id8957642992059005294 = new Rule_hasWayToEnd();
  public static final Rule<ContainmentContext> check_id8957642992061622830 = new Rule_isVariableCreatedBefore();
  public static final Rule<ContainmentContext> check_id6813169283234558537 = new Rule_isNameUnique();

  private static final List<Rule<?>> RULES = Collections.unmodifiableList(Arrays.<Rule<?>>asList(check_id8957642992059005294, check_id8957642992061622830, check_id6813169283234558537));

  @NotNull
  @Override
  public List<Rule<?>> getDeclaredRules() {
    return RULES;
  }

  public static final class Rule_hasWayToEnd extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:78a9156e-a44f-41d3-80a0-48b94124f378(CallScriptLanguage.constraints)/8957642992059005294");
    public static final RuleId ID_hasWayToEnd = new RuleId(8957642992059005294L, SOURCE_NODE_REF);

    public Rule_hasWayToEnd() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_hasWayToEnd, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return (boolean) ChatBot__BehaviorDescriptor.hasChatNodeWayToEnd_id7LfWdtQrZBy.invoke(SNodeOperations.as(context.getParentNode(), CONCEPTS.ChatBot$6V), context.getChildNode());
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }

  }

  public static final class Rule_isVariableCreatedBefore extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:78a9156e-a44f-41d3-80a0-48b94124f378(CallScriptLanguage.constraints)/8957642992061622830");
    public static final RuleId ID_isVariableCreatedBefore = new RuleId(8957642992061622830L, SOURCE_NODE_REF);

    public Rule_isVariableCreatedBefore() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_isVariableCreatedBefore, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return (boolean) ChatBot__BehaviorDescriptor.hasChatNodeVariableCreatedBefore_id7LfWdtQwd34.invoke(SNodeOperations.as(context.getParentNode(), CONCEPTS.ChatBot$6V), context.getChildNode());
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }

  }

  public static final class Rule_isNameUnique extends BaseRule<ContainmentContext> {
    private static final SNodeReference SOURCE_NODE_REF = PersistenceFacade.getInstance().createNodeReference("r:78a9156e-a44f-41d3-80a0-48b94124f378(CallScriptLanguage.constraints)/6813169283234558537");
    public static final RuleId ID_isNameUnique = new RuleId(6813169283234558537L, SOURCE_NODE_REF);

    public Rule_isNameUnique() {
      super(CONCEPT, PredefinedRuleKinds.CAN_BE_CHILD, ID_isNameUnique, SOURCE_NODE_REF);
    }

    @Override
    public boolean check(@NotNull ContainmentContext context) {
      return (boolean) ChatBot__BehaviorDescriptor.isChatNodeNameUnique_id5UdflQ9Lz7_.invoke(SNodeOperations.as(context.getParentNode(), CONCEPTS.ChatBot$6V), context.getChildNode());
    }

    @Override
    public boolean appliesTo(@NotNull ContainmentContext context) {
      return true;
    }

  }

  /*package*/ ChatNode_ConstraintRules() {
    super(CONCEPT);
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept ChatBot$6V = MetaAdapterFactory.getConcept(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e592L, "CallScriptLanguage.structure.ChatBot");
  }
}
