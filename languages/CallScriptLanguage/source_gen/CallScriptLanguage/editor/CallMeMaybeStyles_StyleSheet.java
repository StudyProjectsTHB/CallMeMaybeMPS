package CallScriptLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.style.AbstractStyleClass;
import jetbrains.mps.editor.runtime.descriptor.EditorBuilderEnvironment;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.editor.runtime.style.Padding;
import jetbrains.mps.editor.runtime.style.Measure;

public class CallMeMaybeStyles_StyleSheet {
  public static class ChatBotNameStyleClass extends AbstractStyleClass {
    public ChatBotNameStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_SIZE, 30);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    }

  }
  public static class ChatNodeCategoryStyleClass extends AbstractStyleClass {
    public ChatNodeCategoryStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_SIZE, 22);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    }

  }
  public static class ChatNodeStyleClass extends AbstractStyleClass {
    public ChatNodeStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_SIZE, 22);
      style.set(StyleAttributes.PADDING_LEFT, new Padding(2, Measure.SPACES));
    }

  }
  public static class ChatNodeAttributeStyleClass extends AbstractStyleClass {
    public ChatNodeAttributeStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_SIZE, 18);
      style.set(StyleAttributes.PADDING_LEFT, new Padding(4, Measure.SPACES));
    }

  }
  public static class ReferenceStyleClass extends AbstractStyleClass {
    public ReferenceStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    }

  }
}
