package CallScriptLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptActionKey = createDescriptorForActionKey();
  /*package*/ final ConceptDescriptor myConceptAndKeyExpression = createDescriptorForAndKeyExpression();
  /*package*/ final ConceptDescriptor myConceptBinaryKeyExpression = createDescriptorForBinaryKeyExpression();
  /*package*/ final ConceptDescriptor myConceptChatBot = createDescriptorForChatBot();
  /*package*/ final ConceptDescriptor myConceptChatNode = createDescriptorForChatNode();
  /*package*/ final ConceptDescriptor myConceptConnection = createDescriptorForConnection();
  /*package*/ final ConceptDescriptor myConceptContinuingChatNode = createDescriptorForContinuingChatNode();
  /*package*/ final ConceptDescriptor myConceptKey = createDescriptorForKey();
  /*package*/ final ConceptDescriptor myConceptKeyExpression = createDescriptorForKeyExpression();
  /*package*/ final ConceptDescriptor myConceptNotKeyExpression = createDescriptorForNotKeyExpression();
  /*package*/ final ConceptDescriptor myConceptOrKeyExpression = createDescriptorForOrKeyExpression();
  /*package*/ final ConceptDescriptor myConceptSimpleKeyExpression = createDescriptorForSimpleKeyExpression();
  /*package*/ final ConceptDescriptor myConceptVariableChatNode = createDescriptorForVariableChatNode();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptActionKey, myConceptAndKeyExpression, myConceptBinaryKeyExpression, myConceptChatBot, myConceptChatNode, myConceptConnection, myConceptContinuingChatNode, myConceptKey, myConceptKeyExpression, myConceptNotKeyExpression, myConceptOrKeyExpression, myConceptSimpleKeyExpression, myConceptVariableChatNode);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.ActionKey:
        return myConceptActionKey;
      case LanguageConceptSwitch.AndKeyExpression:
        return myConceptAndKeyExpression;
      case LanguageConceptSwitch.BinaryKeyExpression:
        return myConceptBinaryKeyExpression;
      case LanguageConceptSwitch.ChatBot:
        return myConceptChatBot;
      case LanguageConceptSwitch.ChatNode:
        return myConceptChatNode;
      case LanguageConceptSwitch.Connection:
        return myConceptConnection;
      case LanguageConceptSwitch.ContinuingChatNode:
        return myConceptContinuingChatNode;
      case LanguageConceptSwitch.Key:
        return myConceptKey;
      case LanguageConceptSwitch.KeyExpression:
        return myConceptKeyExpression;
      case LanguageConceptSwitch.NotKeyExpression:
        return myConceptNotKeyExpression;
      case LanguageConceptSwitch.OrKeyExpression:
        return myConceptOrKeyExpression;
      case LanguageConceptSwitch.SimpleKeyExpression:
        return myConceptSimpleKeyExpression;
      case LanguageConceptSwitch.VariableChatNode:
        return myConceptVariableChatNode;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForActionKey() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "ActionKey", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd605L);
    b.class_(false, false, false);
    // extends: CallScriptLanguage.structure.Key
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd604L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/2497532009355531781");
    b.version(3);
    b.alias("!");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndKeyExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "AndKeyExpression", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5baL);
    b.class_(false, false, false);
    // extends: CallScriptLanguage.structure.BinaryKeyExpression
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5b5L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604282");
    b.version(3);
    b.alias("&");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryKeyExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "BinaryKeyExpression", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5b5L);
    b.class_(false, true, false);
    // extends: CallScriptLanguage.structure.KeyExpression
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5adL);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604277");
    b.version(3);
    b.aggregate("leftOperand", 0x72ca8e62f371e5b6L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5adL).optional(false).ordered(true).multiple(false).origin("8271580221261604278").done();
    b.aggregate("rightOperand", 0x72ca8e62f371e5b7L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5adL).optional(false).ordered(true).multiple(false).origin("8271580221261604279").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChatBot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "ChatBot", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e592L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604242");
    b.version(3);
    b.aggregate("startChatNode", 0x72ca8e62f371e5a3L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e59cL).optional(false).ordered(true).multiple(false).origin("8271580221261604259").done();
    b.aggregate("middleChatNodes", 0x72ca8e62f371e5a4L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e59cL).optional(true).ordered(true).multiple(true).origin("8271580221261604260").done();
    b.aggregate("endChatNode", 0x72ca8e62f371e5a5L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e594L).optional(false).ordered(true).multiple(true).origin("8271580221261604261").done();
    b.aggregate("variableChatNodes", 0x22a9042148d31014L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd5ffL).optional(true).ordered(true).multiple(true).origin("2497532009355874324").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChatNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "ChatNode", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e594L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604244");
    b.version(3);
    b.property("text", 0x72ca8e62f371e59dL).type(PrimitiveTypeId.STRING).origin("8271580221261604253").done();
    b.associate("variable", 0x22a9042148cdd603L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd5ffL).optional(true).origin("2497532009355531779").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConnection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "Connection", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5a6L);
    b.class_(false, false, false);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604262");
    b.version(3);
    b.associate("chatNode", 0x78d3578bca6ace60L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e594L).optional(false).origin("8706398762545368672").done();
    b.aggregate("key", 0x72ca8e62f371e5afL).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd604L).optional(false).ordered(true).multiple(false).origin("8271580221261604271").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContinuingChatNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "ContinuingChatNode", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e59cL);
    b.class_(false, false, false);
    // extends: CallScriptLanguage.structure.ChatNode
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e594L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604252");
    b.version(3);
    b.aggregate("connection", 0x72ca8e62f371e5c1L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5a6L).optional(false).ordered(true).multiple(true).origin("8271580221261604289").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForKey() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "Key", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd604L);
    b.class_(false, false, false);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/2497532009355531780");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForKeyExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "KeyExpression", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5adL);
    b.class_(false, true, false);
    // extends: CallScriptLanguage.structure.Key
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd604L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604269");
    b.version(3);
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotKeyExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "NotKeyExpression", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5bbL);
    b.class_(false, false, false);
    // extends: CallScriptLanguage.structure.KeyExpression
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5adL);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604283");
    b.version(3);
    b.aggregate("operand", 0x78d3578bca66474fL).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5adL).optional(false).ordered(true).multiple(false).origin("8706398762545071951").done();
    b.alias("!");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrKeyExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "OrKeyExpression", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5b9L);
    b.class_(false, false, false);
    // extends: CallScriptLanguage.structure.BinaryKeyExpression
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5b5L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604281");
    b.version(3);
    b.alias("|");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleKeyExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "SimpleKeyExpression", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5b3L);
    b.class_(false, false, false);
    // extends: CallScriptLanguage.structure.KeyExpression
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e5adL);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/8271580221261604275");
    b.version(3);
    b.property("key", 0x72ca8e62f371e5b4L).type(PrimitiveTypeId.STRING).origin("8271580221261604276").done();
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableChatNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CallScriptLanguage", "VariableChatNode", 0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x22a9042148cdd5ffL);
    b.class_(false, false, false);
    // extends: CallScriptLanguage.structure.ChatNode
    b.super_(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e594L);
    b.origin("r:7147c60d-47c0-4484-9b2a-659efddb50e6(CallScriptLanguage.structure)/2497532009355531775");
    b.version(3);
    b.property("variableName", 0x22a9042148cdd600L).type(PrimitiveTypeId.STRING).origin("2497532009355531776").done();
    b.associate("chatNode", 0x22a9042148cdd601L).target(0x13a7dce9ad43efL, 0xa0338212155a1b91L, 0x72ca8e62f371e594L).optional(false).origin("2497532009355531777").done();
    return b.create();
  }
}
