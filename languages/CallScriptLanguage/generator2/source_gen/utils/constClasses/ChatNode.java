package utils.constClasses;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class ChatNode {
  protected String name;
  protected String text;
  protected String variableName;

  public ChatNode(String name, String text, String variableName) {
    this.name = name;
    this.text = text;
    this.variableName = variableName;
  }

  public ChatNode(String name, String text) {
    this(name, text, null);
  }

  public String getTextToSay(List<VariableChatNode> variableChatNodes) {
    VariableChatNode matching = ListSequence.fromList(variableChatNodes).findFirst((it) -> it.name.equals(ChatNode.this.variableName));
    if (matching != null) {
      return text + " " + matching.getValue();
    } else {
      return text;
    }
  }

  public String getName() {
    return name;
  }

  public boolean equals(Object other) {
    if (other == null) {
      return false;
    }
    if (other.getClass() != this.getClass()) {
      return false;
    }

    ChatNode otherChatNode = as_cf345p_a0a3a21(other, ChatNode.class);

    if (name == null) {
      return otherChatNode.getName() == null;
    }
    return name.equals(otherChatNode.getName());
  }

  public int hashCode() {
    if (name == null) {
      return 43;
    }
    return 43 + name.hashCode();
  }
  private static <T> T as_cf345p_a0a3a21(Object o, Class<T> type) {
    return (type.isInstance(o) ? (T) o : null);
  }
}
